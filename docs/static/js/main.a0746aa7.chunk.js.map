{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertpp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertpp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,mCACA,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SAGI,uBACIO,KAAM,OACNC,MAAWT,EACXU,SAtBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCNjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE6CC,UAAWH,GAFxD,sDAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAEC,GAEzB,OADCC,QAAQC,IAAKF,GAEV,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAQJ,EAAMd,IAAMmB,IAAQL,EAAMJ,QACvC,4BAAKI,EAAMJ,YCFVU,EAAU,SAAC,GAAoB,IAAjBtB,EAAgB,EAAhBA,SAAgB,ECFf,SAAEA,GAAe,IAAD,EACdd,mBAAU,CAChCqB,KAAM,GACNgB,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAsBxC,OAfAC,qBAAW,WAEPC,YAAW,WAEP5B,EAASC,GACJ4B,MAAM,SAAAC,GACHJ,EAAS,CACLlB,KAAMsB,EACNN,SAAS,SAGtB,OACJ,CAAEvB,IAGEwB,EDjB0BM,CAAc9B,GAAnCa,EAH2B,EAGhCN,KAAcgB,EAHkB,EAGlBA,QAErB,OACI,qCACA,6BAAMvB,IACN,sBAAKmB,UAAU,8CAAf,UACKI,GAAW,mBAAGJ,UAAU,mCAAb,qBAERN,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADGA,EAAIC,cEdnBoB,EAAc,WAAO,IAAD,EAGO7C,mBAAS,CAAC,cAHjB,mBAGtB8C,EAHsB,KAGV/C,EAHU,KAK7B,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ+C,EAAWvB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEIA,SAAaA,GADLA,YCfxCiC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a0746aa7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n       setInputValue(e.target.value);    \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n        // console.log('Submit hecho');\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit = { handleSubmit }>\r\n\r\n            {/* <h1>{ inputValue }</h1> */}\r\n            <input \r\n                type= \"text\"\r\n                value =  { inputValue }\r\n                onChange = { handleInputChange }\r\n                />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category ) }&api_key=sg8f0RK6UO6569szbwzwNIyxJWOfbXPU`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return  {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n     console.log( props );\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = { props.url } alt = { props.title } />\r\n            <p>{ props.title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images,  loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n        <div className=\"card-grid animate__animated animate__fadeIn\">\r\n           { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            {\r\n                images.map( img  => (\r\n                    <GifGridItem \r\n                    key = { img.id }\r\n                    { ...img }/>\r\n                    ))\r\n                }\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState( {\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n\r\n    useEffect( () => {\r\n\r\n        setTimeout(() => {\r\n            \r\n            getGifs( category )\r\n                .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                })\r\n        }, 1000);\r\n    }, [ category ])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertpp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Community'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertpp</h2>\r\n            <AddCategory setCategories= { setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick= { handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                            <GifGrid\r\n                                key = { category } \r\n                                category = { category } />\r\n                        )\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertpp } from './GifExpertpp';\n\n\nReactDOM.render(\n \n    <GifExpertpp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}